; FILE: Object.ini ////////////////////////////////////////////////////////////
; This file defines an object and all the default values for all the
; possible fields.  These defaults are used whenever a new object entry
; is created in other INI files.  If that INI entry does not specify a
; field then the value from this default set is used.
; /////////////////////////////////////////////////////////////////////////////

Object DefaultThingTemplate

  ; *** ART Parameters ***
  ;SelectPortrait       = SCTempSelectPortrait
  ;The placement view angle is the initial view angle you see a building at when
  ;it's floating at the cursor for placement.  Values are 0-360 with
  ;0 being down the X axis (right side of screen) and counterclockwise from there
  ;PlacementViewAngle = -45.0
  ; *For the upgrade cameo's pass in the name of the Upgrade you want the unit to display when selected.
  ;UpgradeCameo1 = Upgrade_AmericaRadar
  ;UpgradeCameo2 = Upgrade_AmericaRadar
  ;UpgradeCameo3 = Upgrade_AmericaRadar
  ;UpgradeCameo4 = Upgrade_AmericaRadar
  ;UpgradeCameo5 = Upgrade_AmericaRadar

  ; ***DESIGN parameters ***
  Buildable = Yes                  							;Is this thing buildable in this map?
  Side = Civilian                  							;Default owning "side" (used only by WB)
  EditorSorting = NONE             							;Where object shows up in editor tree
  TransportSlotCount = TRANSPORTSLOTCOUNT_NOT_TRANSPORTABLE	;how many "slots" we take in a transport (0 == not transportable)

  ArmorSet
    Conditions      = None
    Armor           = NoArmor
    DamageFX        = None
  End

  VisionRange = 0.0                      ;How far we can see
  BuildCost = 0                          ;Cost to build
  BuildTime = 1                          ;Time to build in seconds
  RefundValue = 0                        ;Sell value (0 = use default)
  EnergyProduction = 0                   ;Energy required, below 0 values produce energy
  IsForbidden = No                       ;Forbidden on this map

  ; *** AUDIO Parameters ***
  ;; This is a complete list of all the sounds you can give for to an Object. All of these
  ;; are potentially playable in the game, though some may not actually be reachable any more
  VoiceAlert = NoSound							; Object is entering EMOTION_ALERT
  VoiceAttack = NoSound							; Given an attack order
  VoiceAttackAir = NoSound						; Given an order to attack an air unit. Defaults to VoiceAttack
  VoiceAttackCharge = NoSound					; Given an attack order, not attacking, been a while since given an attack order
  VoiceAttackMachine = NoSound					; Object is ordered to attack an object with KindOf = MACHINE
  VoiceAttackStructure = NoSound				; Object is ordered to attack an object with KindOf = STRUCTURE
  VoiceCombineWithHorde = NoSound				; Unit is not a member of a horde, and is being told to combine with a horde
  VoiceCreated = NoSound						; Played when first created (First unit created, if entire group is created at once)
  VoiceDefect = NoSound							; Unit defects to another player
  VoiceFullyCreated = NoSound					; Object is part of a horde, and the horde just had its last member produced (from factory)
  VoiceFear = NoSound							; Played when object gets into "red" health zone
  VoiceGuard = NoSound							; Ordered to guard area
  VoiceMove = NoSound							; Given a move order
  VoiceMoveOverWalls = NoSound					; Move order requires that unit go over a wall
  VoiceMoveToCamp = NoSound						; Object is outside of the owner's camp / castles, and is ordered to move into one the owner's camps / castles
  VoiceMoveToHigherGround = NoSound				; Given a move order to a significantly higher location (must set MinZIncreaseForVoiceMoveToHigherGround to use)
  VoiceMoveWhileAttacking = NoSound				; Object is given a move order while ENGAGED 
  VoiceRetreatToCastle = NoSound				; Object is (a) in battle (ENGAGED), (b) outside the owner's camps/castles, and
												;(c) given an order to move into one of the owner's camps / castle
  VoiceSelect = NoSound							; Played when selected
  VoiceSelectBattle = NoSound					; Played when selected and ENGAGED
  VoiceTaskComplete = NoSound					; Generic task complete

  VoiceEnterStateAttack = NoSound				; AI is actually entering an attack state
  VoiceEnterStateAttackCharge = NoSound			; AI is actually entering an attack state for first time in n seconds
  VoiceEnterStateAttackAir = NoSound			; AI is actually entering an attack state for an airborn target
  VoiceEnterStateAttackStructure = NoSound		; AI is actually entering an attack state for a structure
  VoiceEnterStateAttackMachine = NoSound		; AI is actually entering an attack state for a machine
  VoiceEnterStateMove = NoSound					; AI is actually entering a move state
  VoiceEnterStateMoveToHigherGround = NoSound	; AI is actually entering a move state which will take it to higher location
  VoiceEnterStateMoveOverWalls = NoSound		; AI is actually entering a move state which requires that unit go over a wall
  VoiceEnterStateRetreatToCastle = NoSound		; AI is actually entering a move state during battle from outside castle to inside
  VoiceEnterStateMoveToCamp = NoSound			; AI is actually entering a move state NOT during battle from outside castle to inside
  VoiceEnterStateMoveWhileAttacking = NoSound	; AI is actually entering a move state during battle

  SoundAmbient = NoSound						; Always played until dead (if SoundAmbientDamaged / SoundAmbientReallyDamaged defined,
												; played until that damage level is reached)
  SoundAmbientBattle = NoSound					; Extra ambient played when in battle
  SoundAmbientDamaged = NoSound					; Played when damaged (looping)
  SoundAmbientReallyDamaged = NoSound			; Played when really damaged (looping)
  SoundAmbientRubble = NoSound					; Played when dead (looping)
  SoundEnter = NoSound             
  SoundExit = NoSound
  SoundCreated = NoSound						; Played when created (produced)
  SoundCrushing = NoSound						; Sound made when crushing another unit, NOT when being crushed
  SoundFallingFromPlane = NoSound
  SoundImpact = NoSound
  SoundMoveLoop = NoSound						; Played while moving
  SoundMoveLoopDamaged = NoSound
  SoundMoveStart = NoSound						; When starting a move
  SoundMoveStartDamaged = NoSound				; Starting a move while damaged
  SoundOnDamaged = NoSound						; Played when going into "damaged" state
  SoundOnReallyDamaged = NoSound				; Played when going into "really damaged" state
  SoundPromotedElite = NoSound
  SoundPromotedHero = NoSound
  SoundPromotedVeteran = NoSound
  SoundStealthOn = NoSound						; Played when turning on stealth
  SoundStealthOff = NoSound						; Played when turning off stealth

  UnitSpecificSounds
	;; This is the list of unit specific sounds recognized by the game. Be careful -- 
	;; the INI parser will not warn you about typos made in the name of the various sounds
    ; Deploy
    ; Undeploy
    ; DisguiseStarted
    ; DisguiseRevealedSuccess
    ; DisguiseRevealedFailure
    ; TurretMoveLoop							; Played while turret is changing orientation
    ; UnderConstruction							; Loop, being built from scratch by a worker/dozer
    ; UnderRepairFromDamage						; Loop, being repaired from a damaged state by a worker/dozer
    ; UnderRepairFromRubble						; Loop, being repaired from rubble by a worker/dozer
    ; VoiceAttackUnit<ObjectName>				; Played when ordered to attack a specific type of object e.g.
    ; VoiceBombard								; Played when order to attack the ground (defaults to VoiceAttack)
    ; VoiceBuildResponse
    ; VoiceCaptureBuildingComplete
    ; VoiceCombatDrop
    ; VoiceCrush
    ; VoiceDesperateAttack
    ; VoiceEnter
    ; VoiceEnterHostile
    ; VoiceEnterUnit<ObjectName>				; Played when entering a specific type of object e.g.
    ; VoiceGetHealed
    ; VoiceGarrison
    ; VoiceNoBuild
    ; VoicePrimaryWeaponMode					; Played when switching to primary weapon
    ; VoiceSecondaryWeaponMode					; Played when switching to secondary weapon
    ; VoiceTertiaryWeaponMode					; Played when switching to tertiary weapon
    ; VoiceRapidFire							; Played when getting into rapid fire mode
    ; VoiceRepair
    ; VoiceSalvage
    ; VoiceSupply
    ; VoiceUnload
    ; VoiceInitiateCaptureBuilding				; Defined in SpecialAbilityCaptureBuilding
    ; VoiceEnterStateInitiateCaptureBuilding	; Defined in SpecialAbilityCaptureBuilding
  End

  VoicePriority = 5
  
  ; Settings for VoiceMoveToCamp / VoiceRetreatToCastle
  CampnessValue = CAMPNESS_DEFAULT		; If this is a structure, how much does it contribute to the 'campness' of the area around it? We must be 
										; moving from an area with 0 campness to an area with 5000 campness (see AudioSettings.ini for current numbers)
										; to get VoiceMoveToCamp
  CampnessValueRadius = 600 ; How far away to project our campness
  
  ; *** ENGINEERING Parameters ***
  RadarPriority					= INVALID			; INVALID means not set, and generally won't be on the radar
  DisplayColor					= R:100 G:100 B:100	; Editor display color
  KindOf						= NONE				; Kind of bits
  CamouflageDetectorLevel	= CAMOUFLAGE_DETECTION_DISTANCE_SHORT

  Body = InactiveBody ModuleTag_DefaultInactiveBody
    ;nothing
  End
  Behavior = DestroyDie ModuleTag_DefaultDestroyDie
    ;nothing
  End
  Draw = W3DDefaultDraw ModuleTag_DefaultW3DDefaultDraw
    ;nothing
  End

  ; InheritableModule means "don't remove me by default when copied from default"
	InheritableModule
		Behavior = AttributeModifierPoolUpdate ModuleTag_DefaultAttributeModifierPoolUpdate
			;nothing
		End
	End
	
  ; InheritableModule means "don't remove me by default when copied from default"
;  InheritableModule
;    Behavior = AutoHealBehavior ModuleTag_DefaultAutoHealBehavior
;      HealingAmount = 10  ;in health points
;      HealingDelay = 1000 ; msec
;      TriggeredBy = Upgrade_Veterancy_ELITE Upgrade_Veterancy_HEROIC ; Either of these two will work (you can skip Elite, so need both)
;    StartHealingDelay = 5000 ;in miliseconds
;   End
;  End

	InheritableModule
		; This will farm out any experience we gain to nearby units.
		Behavior = ShareExperienceBehavior ModuleTag_DefaultShareExp
			Radius			= 100.0
			ObjectFilter	= ANY +HERO
			DropOff			= 1.0			; Must be one or zero.
		End
	End

  InheritableModule
    Behavior = TemporarilyDefectUpdate ModuleTag_TemporarilyDefectUpdate
    ;***************************** IMPORTANT ***********************************************
    ;***************************** IMPORTANT ***********************************************
    ;***************************** IMPORTANT ***********************************************
    ;***************************** IMPORTANT ***********************************************
      DefectDuration	  = 30000	; VERY VERY IMPORTANT, YOU MUST Make sure that DefectDuration 
									; is LESS than the ReloadTime of the special power(s)
									; that trigger defection. Or all maner of grief will happen
									; with defected units. So any special powers (currently only
									; SpecialAbilityDominateEnemy in specialpower.ini) that
									; trigger TemporarilyDefectUpdate will need to MAKE SURE
									; that thier ReloadTimes are greater than DefectDuration
    ;***************************** IMPORTANT ***********************************************
    ;***************************** IMPORTANT ***********************************************
    ;***************************** IMPORTANT ***********************************************
    ;***************************** IMPORTANT ***********************************************
				
    End
  End
  
;	InheritableModule
;		Behavior = AttributeModifierUpgrade ModuleTag_EasySoloBonus
;			TriggeredBy = Upgrade_EasyAISinglePlayer
;			AttributeModifier = EasyAISinglePlayer_Bonus
;		End
;	End

;	InheritableModule
;		Behavior = AttributeModifierUpgrade ModuleTag_MediumSoloBonus
;			TriggeredBy = Upgrade_MediumAISinglePlayer
;			AttributeModifier = MediumAISinglePlayer_Bonus
;		End
;	End

;	InheritableModule
;		Behavior = AttributeModifierUpgrade ModuleTag_HardSoloBonus
;			TriggeredBy = Upgrade_HardAISinglePlayer
;			AttributeModifier = HardAISinglePlayer_Bonus
;		End
;	End

;	InheritableModule
;		Behavior = AttributeModifierUpgrade ModuleTag_EasyMPBonus
;			TriggeredBy = Upgrade_EasyAIMultiPlayer
;			AttributeModifier = EasyAIMultiPlayer_Bonus
;		End
;	End

;	InheritableModule
;		Behavior = AttributeModifierUpgrade ModuleTag_MediumMPBonus
;			TriggeredBy = Upgrade_MediumAIMultiPlayer
;			AttributeModifier = MediumAIMultiPlayer_Bonus
;		End
;	End

;	InheritableModule
;		Behavior = AttributeModifierUpgrade ModuleTag_HardMPBonus
;			TriggeredBy = Upgrade_HardAIMultiPlayer
;			AttributeModifier = HardAIMultiPlayer_Bonus
;		End
;	End
	
  Scale = 1.0                               ;Scaling
  Geometry = SPHERE                         ;Collision geometry
  GeometryMajorRadius = 0.8                 ;Collision major radius
  GeometryMinorRadius = 0.8                 ;Collision minor radius
  GeometryHeight = 0.8                      ;Height for geometry
  GeometryIsSmall = Yes                     ;Is small geometry
  Shadow = NONE                             ;Shadows present for object
  BuildCompletion = APPEARS_AT_RALLY_POINT  ;Or PLACED_BY_PLAYER
  
  ; -----------------------------------------------------------------------------------------
  ; Table to use to scale experience by rank per mission. Defined in ExperienceLevels.ini.
  
  ExperienceScalarTable = DefaultExperienceScalarTable

End
